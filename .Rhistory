ggtitle('Mean energy per north pannel')
mean_energy_per_north_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_north_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel, col = "black", alpha=0.9)) +            geom_histogram() +
ggtitle('Mean energy per north pannel')
mean_energy_per_north_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_north_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel, col = "black", alpha=0.1)) +            geom_histogram() +
ggtitle('Mean energy per north pannel')
mean_energy_per_north_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_north_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel, col = "black")) +
geom_histogram() +
ggtitle('Mean energy per north pannel')
mean_energy_per_north_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_north_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7) +
ggtitle('Mean energy per north pannel')
mean_energy_per_north_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_north_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7) +
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per north pannel (kw)")
mean_energy_per_north_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_north_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7) +
geom_density() +
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per north pannel (kw)")
mean_energy_per_north_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_north_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7) +
geom_density() +
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per north pannel (kw)", y = "Frequency")
mean_energy_per_north_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_north_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7) +
geom_density(col="red") +
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per north pannel (kw)", y = "Frequency")
mean_energy_per_north_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_north_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_density(col = "red", fill = "black", alpha = 0.7) +
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per north pannel (kw)", y = "Frequency")
mean_energy_per_north_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_density(col = "red", fill = "black", alpha = 0.7) +
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per north pannel (kw)", y = "Density")
mean_energy_per_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_density(col = "red", fill = "black", alpha = 0.4) +
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per pannel (kw)", y = "Density")
mean_energy_per_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7)
geom_density(col = "red", fill = "black", alpha = 0.4) +
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per pannel (kw)", y = "Density")
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7)+
geom_density(col = "red", fill = "black", alpha = 0.4) +
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per pannel (kw)", y = "Density")
mean_energy_per_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7)+
geom_line() +
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per pannel (kw)", y = "Density")
mean_energy_per_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7)+
geom_line() +
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per pannel (kw)", y = "Density")
mean_energy_per_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7)+
geom_density(col = "red") +
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per pannel (kw)", y = "Density")
mean_energy_per_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7)+
stat_function(
fun = dnorm,
args = with(ciydf1, c(mean = mean(mean_energy_per_north_panel), sd =        sd(mean_energy_per_north_panel)))) +
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per pannel (kw)", y = "Density")
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7)+
stat_function(
fun = dnorm,
args = with(citydf1, c(mean = mean(mean_energy_per_north_panel), sd =        sd(mean_energy_per_north_panel)))) +
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per pannel (kw)", y = "Density")
mean_energy_per_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7)+
stat_function(
fun = dnorm,
args = with(citydf1, c(mean = mean(mean_energy_per_north_panel), sd =        sd(mean_energy_per_north_panel)))) +
scale_x_continuous("Mean")+
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per pannel (kw)", y = "Density")
mean_energy_per_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
mean_energy_per_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7)+
stat_function(fun = dnorm, args = with(citydf1, c(mean = mean(mean_energy_per_north_panel), sd = sd(mean_energy_per_north_panel)))) +
scale_x_continuous("Mean")+
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per pannel (kw)", y = "Density")
mean_energy_per_panel_plot
View(citydf1)
sun_per_direction = lm(sunlight_total ~ sunlight_north + sunlight_south + sunlight_west + sunlight_east + sunlight_flat, data=citydf1)
xkabledply(sun_per_direction)
summary(sun_per_direction)
vif(sun_per_direction)
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
#north panel
mean_energy_per_north_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7) +
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per pannel (kw)", y = "Frequency")
mean_energy_per_panel_plot
#south panel
mean_energy_per_south_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_south_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7) +
ggtitle('Mean energy per south panel') +
labs(x = "Mean energy per panel (kw)", y = "Frequency")
mean_energy_per_south_panel_plot
#east pannel
mean_energy_per_east_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_east_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7) +
ggtitle('Mean energy per east panel') +
labs(x = "Mean energy per panel (kw)", y = "Frequency")
mean_energy_per_east_panel_plot
#west panel
mean_energy_per_west_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_east_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7) +
ggtitle('Mean energy per west panel') +
labs(x = "Mean energy per panel (kw)", y = "Frequency")
mean_energy_per_west_panel_plot
#flat panel
mean_energy_per_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7) +
ggtitle('Mean energy per panel') +
labs(x = "Mean energy per panel (kw)", y = "Frequency")
mean_energy_per_panel_plot
#total
mean_energy_per_east_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_east_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7) +
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per pannel (kw)", y = "Frequency")
mean_energy_per_east_panel_plot
citydf1=na.exclude(citydf1)
citydf1$mean_energy_per_north_panel = citydf1$sunlight_north / citydf1$panels_north
citydf1$mean_energy_per_south_panel = citydf1$sunlight_south / citydf1$panels_south
citydf1$mean_energy_per_east_panel = citydf1$sunlight_east / citydf1$panels_east
citydf1$mean_energy_per_west_panel = citydf1$sunlight_west / citydf1$panels_west
citydf1$mean_energy_per_flat_panel = citydf1$sunlight_flat / citydf1$panels_flat
citydf1$mean_energy_per_panel = citydf1$sunlight_total / citydf1$panels_total
#north panel
mean_energy_per_north_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_north_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7) +
ggtitle('Mean energy per north pannel') +
labs(x = "Mean energy per pannel (kw)", y = "Frequency")
mean_energy_per_panel_plot
#south panel
mean_energy_per_south_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_south_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7) +
ggtitle('Mean energy per south panel') +
labs(x = "Mean energy per panel (kw)", y = "Frequency")
mean_energy_per_south_panel_plot
#east pannel
mean_energy_per_east_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_east_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7) +
ggtitle('Mean energy per east panel') +
labs(x = "Mean energy per panel (kw)", y = "Frequency")
mean_energy_per_east_panel_plot
#west panel
mean_energy_per_west_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_east_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7) +
ggtitle('Mean energy per west panel') +
labs(x = "Mean energy per panel (kw)", y = "Frequency")
mean_energy_per_west_panel_plot
#flat panel
mean_energy_per_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7) +
ggtitle('Mean energy per panel') +
labs(x = "Mean energy per panel (kw)", y = "Frequency")
mean_energy_per_panel_plot
#total
mean_energy_per_panel_plot =
ggplot(data = citydf1,
aes(x = mean_energy_per_panel)) +
geom_histogram(col = "red", fill = "black", alpha = 0.7) +
ggtitle('Mean energy per panel') +
labs(x = "Mean energy per panel (kw)", y = "Frequency")
mean_energy_per_panel_plot
mean_total_north = mean(citydf1$mean_energy_per_north_panel) # There are a lot of data points
mean_total_south = mean(citydf1$mean_energy_per_south_panel) # Calculate the total mean
mean_total_east = mean(citydf1$mean_energy_per_east_panel)
mean_total_west = mean(citydf1$mean_energy_per_west_panel)
mean_total_flat = mean(citydf1$mean_energy_per_flat_panel)
mean_total_all = mean(citydf1$mean_energy_per_panel)
# Add a simple table to display the total mean
mean_per_direction <- matrix(c(mean_total_north, mean_total_south, mean_total_east, mean_total_west, mean_total_flat, mean_total_all),ncol=6, nrow=1, byrow=FALSE)
colnames(mean_per_direction) <- c("North","South","East","West","Flat","Total")
rownames(mean_per_direction) <- "Total Mean"
mean_per_direction_table <- as.table(mean_per_direction)
xkabledply(mean_per_direction_table,
title = "Total mean of energy per pannel in each direction ")
# Look at effect of directional facing buildings per different longitude/latitude (i.e. cities in the north might have higher energy generation potential from south facing, and vice versa.)
# "The geographic center of the contiguous United States as located in a 1918 survey is located at 39°50′ -98°35′, about 2.6 miles (4.2 km) northwest of the center of Lebanon, Kansas, approximately 12 miles (19 km) south of the Kansas–Nebraska border." source: https://en.wikipedia.org/wiki/Geographic_center_of_the_United_States#:~:text=The%20geographic%20center%20of%20the%20contiguous%20United%20States%20as%20located,of%20the%20Kansas%E2%80%93Nebraska%20border.
north_us_city = subset(citydf1, lat_min >39.5)
south_us_city = subset(citydf1, lat_max <39.5)
# Effect of north/south/east/west directional facing roofs on total estimated sunlight per city. Separated into two subsets: northern US cities (having a minimum latitude of 39.5 or greater) and southern US cities (having a maximum latitude of 39.5 or less). Subsets allow us to analyze if the different directional facings roofs have separate impacts depending on which part of the country they exist in.
# Can subset further to measure effects per region (northeast, southeast, mid west, west, etc.)
sun_per_direction_north = lm(sunlight_total ~ sunlight_north + sunlight_south + sunlight_west + sunlight_east, data=north_us_city)
sun_per_direction_south = lm(sunlight_total ~ sunlight_north + sunlight_south + sunlight_west + sunlight_east, data=south_us_city)
summary(sun_per_direction_north)
vif(sun_per_direction_north)
summary(sun_per_direction_south)
vif(sun_per_direction_south)
# Look at effect of directional facing buildings per different longitude/latitude (i.e. cities in the north might have higher energy generation potential from south facing, and vice versa.)
# "The geographic center of the contiguous United States as located in a 1918 survey is located at 39°50′ -98°35′, about 2.6 miles (4.2 km) northwest of the center of Lebanon, Kansas, approximately 12 miles (19 km) south of the Kansas–Nebraska border." source: https://en.wikipedia.org/wiki/Geographic_center_of_the_United_States#:~:text=The%20geographic%20center%20of%20the%20contiguous%20United%20States%20as%20located,of%20the%20Kansas%E2%80%93Nebraska%20border.
north_us_city = subset(citydf1, lat_min >39.5)
south_us_city = subset(citydf1, lat_max <39.5)
# Effect of north/south/east/west directional facing roofs on total estimated sunlight per city. Separated into two subsets: northern US cities (having a minimum latitude of 39.5 or greater) and southern US cities (having a maximum latitude of 39.5 or less). Subsets allow us to analyze if the different directional facings roofs have separate impacts depending on which part of the country they exist in.
# Can subset further to measure effects per region (northeast, southeast, mid west, west, etc.)
sun_per_direction_north = lm(sunlight_total ~ sunlight_north + sunlight_south + sunlight_west + sunlight_east+sunlight_flat, data=north_us_city)
sun_per_direction_south = lm(sunlight_total ~ sunlight_north + sunlight_south + sunlight_west + sunlight_east+sunlight_flat, data=south_us_city)
summary(sun_per_direction_north)
vif(sun_per_direction_north)
summary(sun_per_direction_south)
vif(sun_per_direction_south)
region_kw_total = ggplot(citydf1, ase(x = region, y = sunlight_total, col = region) ) +
goem_boxplot() +
labs(title = "Sunlight Total VS Region")
region_kw_total = ggplot(citydf1, aes(x = region, y = sunlight_total, col = region) ) +
goem_boxplot() +
labs(title = "Sunlight Total VS Region")
region_kw_total = ggplot(citydf1, aes(x = region, y = sunlight_total, col = region) ) +
geom_boxplot() +
labs(title = "Sunlight Total VS Region")
region_kw_total = ggplot(citydf1, aes(x = region, y = sunlight_total, col = region) ) +
geom_boxplot() +
labs(title = "Sunlight Total VS Region")
region_kw_total
region_sunlight_total = ggplot(citydf1, aes(x = region, y = sunlight_total, col = region) ) +
geom_boxplot() +
labs(title = "Sunlight Total VS Region")
region_sunlight_total
View(citydf1)
region_sunlight_total = ggplot(citydf1, aes(x = region, y = carbon_offset, col = region) ) +
geom_boxplot() +
labs(title = "Sunlight Total VS Region")
region_sunlight_total
region_sunlight_total = ggplot(citydf1, aes(x = region, y = sunlight_total, col = region) ) +
geom_boxplot() +
labs(title = "Sunlight Total VS Region")
region_sunlight_total
loadPkg('car')
loadPkg("corrplot")
loadPkg("lattice")
city_corr=cor(city_num)
corrplot(city_corr, method = "number")
total_sun_north = lm(sunlight_total ~ sunlight_north, data=citydf1)
total_sun_south = lm(sunlight_total ~ sunlight_south, data=citydf1)
total_sun_east = lm(sunlight_total ~ sunlight_east, data=citydf1)
total_sun_west = lm(sunlight_total ~ sunlight_west, data=citydf1)
direction_anova = anova(total_sun_north, total_sun_south, total_sun_east, total_sun_west)
direction_anova
#summary(total_sun_north)
#summary(total_sun_south)
#summary(total_sun_east)
#summary(total_sun_west)
# testing out new model
# VIF error might mean perfect colinearity
# lm_offset = lm(carbon_offset ~ kw_total + panels_total, sunlight_total, data = city_num)
# Old model
# Take a look at the corrplot above.  kw_toal and panels_total has a coef of 1.
lm_offset = lm(carbon_offset ~ kw_total + count_existing , data = citydf1)
# new model
summary(lm_offset)
vif(lm_offset)
region_sunlight_total = ggplot(citydf1, aes(x = region, y = sunlight_total, col = region) ) +
geom_boxplot() +
labs(title = "Sunlight Total VS Region", y = 'Sunlight Total (Kw))
region_sunlight_total
region_sunlight_total = ggplot(citydf1, aes(x = region, y = sunlight_total, col = region) ) +
geom_boxplot() +
labs(title = "Sunlight Total VS Region", y = "Sunlight Total (Kw)")
region_sunlight_total
# testing out new model
# VIF error might mean perfect collinearity
offset = lm(carbon_offset ~ kw_total + panels_total + sunlight_total, data = citydf1)
summary(offset)
vif(offset)
View(citydf)
View(citydf)
View(citydf1)
